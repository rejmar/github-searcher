[{"D:\\DEV\\GITHUB\\github-searcher\\src\\index.tsx":"1","D:\\DEV\\GITHUB\\github-searcher\\src\\GithubSearcher\\SearchBar.tsx":"2","D:\\DEV\\GITHUB\\github-searcher\\src\\GithubSearcher\\index.tsx":"3","D:\\DEV\\GITHUB\\github-searcher\\src\\actions\\index.ts":"4","D:\\DEV\\GITHUB\\github-searcher\\src\\constants\\index.ts":"5","D:\\DEV\\GITHUB\\github-searcher\\src\\GithubSearcher\\UserDetails\\index.tsx":"6","D:\\DEV\\GITHUB\\github-searcher\\src\\GithubSearcher\\UserDetails\\UserInfo.tsx":"7"},{"size":576,"mtime":1606252853051,"results":"8","hashOfConfig":"9"},{"size":1379,"mtime":1606352355232,"results":"10","hashOfConfig":"9"},{"size":1127,"mtime":1606352447007,"results":"11","hashOfConfig":"9"},{"size":498,"mtime":1606350366913,"results":"12","hashOfConfig":"9"},{"size":99,"mtime":1606347593563,"results":"13","hashOfConfig":"9"},{"size":517,"mtime":1606352695039,"results":"14","hashOfConfig":"9"},{"size":614,"mtime":1606352784702,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"3z4h7l",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\DEV\\GITHUB\\github-searcher\\src\\index.tsx",[],[],"D:\\DEV\\GITHUB\\github-searcher\\src\\GithubSearcher\\SearchBar.tsx",[],"D:\\DEV\\GITHUB\\github-searcher\\src\\GithubSearcher\\index.tsx",["33","34","35","36"],"import classNames from \"classnames\";\nimport React, { useState } from \"react\";\nimport { fetchUserInfo } from \"../actions\";\nimport { GithubUser } from \"../constants/types\";\nimport SearchBar from \"./SearchBar\";\nimport UserDetails from \"./UserDetails\";\n\nconst GithubSearcher: React.FunctionComponent = () => {\n  const [user, setUser] = useState<GithubUser>();\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string>(\"\");\n\n  const handleUserSearch = (user: string) => {\n    setIsLoading(true);\n    fetchUserInfo(user)\n      .then((res: GithubUser) => {\n        res && setUser(res);\n      })\n      .catch((err: string) => {\n        setError(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  return (\n    <div\n      data-testid={\"github-searcher\"}\n      className={classNames(\n        \"d-flex\",\n        \"flex-column\",\n        \"text-dark\",\n        \"justify-content-center\",\n        \"w-100\"\n      )}\n    >\n      <SearchBar onUserSet={handleUserSearch} />\n      {user && <UserDetails user={user} />}\n    </div>\n  );\n};\n\nexport default GithubSearcher;\n","D:\\DEV\\GITHUB\\github-searcher\\src\\actions\\index.ts",["37","38","39","40"],"import Axios from \"axios\";\r\nimport { GithubUser, UserRepos } from \"../constants/types\";\r\n\r\nexport const fetchUserInfo = (login: string): Promise<GithubUser> =>\r\n  Axios.get(\"https://api.github.com/users/\" + login)\r\n    .then((res: any) => res.data)\r\n    .catch((err: any) => err.message);\r\n\r\nexport const fetchUsersRepos = (login: string): Promise<UserRepos> =>\r\n  Axios.get(`https://api.github.com/users/${login}/repos`)\r\n    .then((res: any) => res.data)\r\n    .catch((err: any) => err.message);\r\n","D:\\DEV\\GITHUB\\github-searcher\\src\\constants\\index.ts",[],"D:\\DEV\\GITHUB\\github-searcher\\src\\GithubSearcher\\UserDetails\\index.tsx",[],"D:\\DEV\\GITHUB\\github-searcher\\src\\GithubSearcher\\UserDetails\\UserInfo.tsx",[],{"ruleId":"41","severity":1,"message":"42","line":10,"column":10,"nodeType":"43","messageId":"44","endLine":10,"endColumn":19},{"ruleId":"45","severity":1,"message":"42","line":10,"column":10,"nodeType":"43","messageId":"44","endLine":10,"endColumn":19},{"ruleId":"41","severity":1,"message":"46","line":11,"column":10,"nodeType":"43","messageId":"44","endLine":11,"endColumn":15},{"ruleId":"45","severity":1,"message":"46","line":11,"column":10,"nodeType":"43","messageId":"44","endLine":11,"endColumn":15},{"ruleId":"47","severity":1,"message":"48","line":6,"column":17,"nodeType":"49","messageId":"50","endLine":6,"endColumn":20,"suggestions":"51"},{"ruleId":"47","severity":1,"message":"48","line":7,"column":18,"nodeType":"49","messageId":"50","endLine":7,"endColumn":21,"suggestions":"52"},{"ruleId":"47","severity":1,"message":"48","line":11,"column":17,"nodeType":"49","messageId":"50","endLine":11,"endColumn":20,"suggestions":"53"},{"ruleId":"47","severity":1,"message":"48","line":12,"column":18,"nodeType":"49","messageId":"50","endLine":12,"endColumn":21,"suggestions":"54"},"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["55","56"],["57","58"],["59","60"],["61","62"],{"messageId":"63","fix":"64","desc":"65"},{"messageId":"66","fix":"67","desc":"68"},{"messageId":"63","fix":"69","desc":"65"},{"messageId":"66","fix":"70","desc":"68"},{"messageId":"63","fix":"71","desc":"65"},{"messageId":"66","fix":"72","desc":"68"},{"messageId":"63","fix":"73","desc":"65"},{"messageId":"66","fix":"74","desc":"68"},"suggestUnknown",{"range":"75","text":"76"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"75","text":"77"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"78","text":"76"},{"range":"78","text":"77"},{"range":"79","text":"76"},{"range":"79","text":"77"},{"range":"80","text":"76"},{"range":"80","text":"77"},[231,234],"unknown","never",[267,270],[439,442],[475,478]]