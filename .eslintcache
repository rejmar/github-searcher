[{"D:\\DEV\\GITHUB\\github-searcher\\src\\index.tsx":"1","D:\\DEV\\GITHUB\\github-searcher\\src\\GithubSearcher\\SearchBar.tsx":"2","D:\\DEV\\GITHUB\\github-searcher\\src\\GithubSearcher\\index.tsx":"3"},{"size":576,"mtime":1606252853051,"results":"4","hashOfConfig":"5"},{"size":1153,"mtime":1606258405518,"results":"6","hashOfConfig":"5"},{"size":560,"mtime":1606254801560,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3z4h7l",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"D:\\DEV\\GITHUB\\github-searcher\\src\\index.tsx",[],"D:\\DEV\\GITHUB\\github-searcher\\src\\GithubSearcher\\SearchBar.tsx",["15","16"],"D:\\DEV\\GITHUB\\github-searcher\\src\\GithubSearcher\\index.tsx",["17","18","19"],"import classNames from \"classnames\";\nimport React, { useState } from \"react\";\nimport SearchBar from \"./SearchBar\";\n\nconst GithubSearcher: React.FunctionComponent = () => {\n  const [user, setUser] = useState<any>({});\n  return (\n    <div\n      data-testid={\"github-searcher\"}\n      className={classNames(\n        \"d-flex\",\n        \"text-dark\",\n        \"justify-content-center\",\n        \"w-100\",\n        \"h-100\"\n      )}\n    >\n      <SearchBar setUser={setUser} />\n      {/* <UserDetails />\n      <Repos /> */}\n    </div>\n  );\n};\n\nexport default GithubSearcher;\n",{"ruleId":"20","severity":1,"message":"21","line":5,"column":12,"nodeType":"22","messageId":"23","endLine":5,"endColumn":15,"suggestions":"24"},{"ruleId":"20","severity":1,"message":"21","line":11,"column":52,"nodeType":"22","messageId":"23","endLine":11,"endColumn":55,"suggestions":"25"},{"ruleId":"26","severity":1,"message":"27","line":6,"column":10,"nodeType":"28","messageId":"29","endLine":6,"endColumn":14},{"ruleId":"30","severity":1,"message":"27","line":6,"column":10,"nodeType":"28","messageId":"29","endLine":6,"endColumn":14},{"ruleId":"20","severity":1,"message":"21","line":6,"column":36,"nodeType":"22","messageId":"23","endLine":6,"endColumn":39,"suggestions":"31"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["32","33"],["34","35"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars",["36","37"],{"messageId":"38","fix":"39","desc":"40"},{"messageId":"41","fix":"42","desc":"43"},{"messageId":"38","fix":"44","desc":"40"},{"messageId":"41","fix":"45","desc":"43"},{"messageId":"38","fix":"46","desc":"40"},{"messageId":"41","fix":"47","desc":"43"},"suggestUnknown",{"range":"48","text":"49"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"48","text":"50"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"51","text":"49"},{"range":"51","text":"50"},{"range":"52","text":"49"},{"range":"52","text":"50"},[118,121],"unknown","never",[281,284],[207,210]]